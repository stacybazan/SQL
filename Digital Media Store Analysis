
 #In this SQL, I'm extracting data from a database containing multiple tables to quantify statistics for a digital media store.



 #1 Show customers (full name, customerID, and country) who are not in the US.
 SELECT customerid, 
   firstname, 
   lastname, 
   country
 FROM customers
 WHERE country <> 'USA';


 #2 Only show the customers from Brazil.
 SELECT firstname, 
   lastname, 
   country
 FROM customers
 WHERE country = 'Brazil';


 #3 Find the invoices of customers who are from Brazil. Show the customer's full name, invoice ID, date of the invoice, and billing country.
 SELECT cust.firstname, 
   cust.lastname, 
   inv.invoiceid, 
   inv.invoicedate,
   inv.billingcountry
 FROM invoices inv
 LEFT JOIN customers cust
 ON inv.customerid=cust.customerid
 WHERE cust.country = 'Brazil';


 #4 Which employees are Sales Agents and was are their employee IDs?
 SELECT employeeid, 
   lastname, 
   firstname, 
   title
 FROM employees
 WHERE title LIKE '%Sales%Agent%';


 #5 Provide a list of countries to which the invoice was billed.
 SELECT distinct billingcountry,
   invoiceid 
 FROM invoices;


 #6 Provide a query that shows the invoices associated with each sales agent.
 SELECT empl.firstname, 
   empl.lastname, 
   invo.invoiceid
 FROM employees empl
 INNER JOIN customers cust
 ON empl.employeeid=cust.supportrepid
 INNER JOIN invoices invo
 ON invo.customerid=cust.customerid
 WHERE empl.title LIKE '%Sales%Agent%';


 #7 Show the invoice total, customer name, country, and sales agent name for all invoices and customers.
 SELECT invo.total,
  cust.firstname AS customer_firstname, 
  cust.lastname AS customer_lastname, 
  cust.country AS customers_country,
  empl.firstname AS salesrep_firstname,
  empl.lastname AS salesrep_lastname
 FROM customers cust
 INNER JOIN employees empl
 ON empl.employeeid=cust.supportrepid
 INNER JOIN invoices invo
 ON invo.customerid=cust.customerid;


 #8 How many invoices were there in 2009?
 SELECT COUNT(invoiceid) AS invoices_2009
 FROM invoices
 WHERE invoicedate LIKE '2009%';


 #9 What are the total sales for 2009?
 SELECT ROUND(SUM(total)) AS Total_Sales_2009
 FROM invoices 
 WHERE invoicedate LIKE '2009%';


 #10 Write a query that includes the purchased track name with each invoice line ID.
 SELECT invo.invoiceLineid, 
   trac.name
 FROM invoice_items invo
 INNER JOIN tracks trac
 ON invo.trackid=trac.trackid;


 #11 Write a query that includes the purchased track name and artist with each invoice line ID.
 SELECT invo.invoiceLineid, 
   trac.name AS Track,
   arti.name AS Artist 
 FROM invoice_items invo
 LEFT JOIN tracks trac
 ON invo.trackid=trac.trackid
 INNER JOIN albums albu
 ON albu.albumid=trac.albumid
 LEFT JOIN artists arti 
 ON albu.artistid=arti.artistid;


 #12 Provide a query that shows all the tracks, the type of media, genre, and the name of the album.
 SELECT trac.name AS Track,
   alb.title AS Album,
   med.name AS Media_Type,
   gen.name AS Genre
 FROM tracks trac
 LEFT JOIN albums alb
 ON alb.albumid=trac.albumid
 LEFT JOIN media_types med
 ON med.mediatypeid=trac.mediatypeid
 LEFT JOIN genres gen
 ON gen.genreid=trac.genreid;


 #13 How much did each sales agent sell in total?
 SELECT distinct empl.firstname, 
   ROUND(SUM(invo.total)) AS Total_Sales
 FROM invoices invo
 INNER JOIN customers cust
 ON cust.customerid=invo.customerid
 LEFT JOIN employees empl
 ON empl.employeeid=cust.supportrepid
 GROUP BY empl.firstname;


 #14 Which sales agent made the most sales in 2009 and how much?
 SELECT distinct empl.firstname, 
  FORMAT(SUM(invo.total)) AS Total_Sales
 FROM invoices invo
 INNER JOIN customers cust
 ON cust.customerid=invo.customerid
 LEFT JOIN employees empl
 ON empl.employeeid=cust.supportrepid
 WHERE invo.invoicedate LIKE '2009%' 
 GROUP BY empl.firstname
 ORDER BY total_sales desc
 LIMIT 1;


 #15 Which four albums have sold the most copies and how much?
 SELECT  
   FORMAT(SUM(invo.total)) AS Sales,
   albu.title
 FROM albums albu
 LEFT JOIN tracks trac
 ON trac.albumid=albu.albumid
 INNER JOIN invoice_items invoit
 ON invoit.trackid=trac.trackid
 INNER JOIN invoices invo
 ON invo.invoiceid=invoit.invoiceid
 GROUP BY albu.title
 ORDER BY sales desc
 LIMIT 4;


 #16 Which album had the highest sales in the year 2012?
 SELECT  
   FORMAT(SUM(invo.total)) AS Sales,
   albu.title
 FROM albums albu
 LEFT JOIN tracks trac
 ON trac.albumid=albu.albumid
 INNER JOIN invoice_items invoit
 ON invoit.trackid=trac.trackid
 INNER JOIN invoices invo
 ON invo.invoiceid=invoit.invoiceid
 WHERE invo.invoicedate LIKE '2012%'
 GROUP BY albu.title
 ORDER BY sales desc
 LIMIT 1;


 #17 Provide the country that has made the most purchases.
 SELECT 
   billingcountry AS Most_Sold_Country,
   COUNT(billingcountry) AS Sold_Quantity
 FROM invoices
 GROUP BY billingcountry
 ORDER BY COUNT(billingcountry) desc
 LIMIT 1;


 #18 List all the audio files in AAC format.
 SELECT
   trac.name AS Track_Name
 FROM tracks trac
 LEFT JOIN media_types med
 ON med.mediatypeid=trac.mediatypeid
 WHERE med.mediatypeid = 5;


 #19 Please provide a list of genres ranked from the highest quantity to the lowest.
 SELECT 
   gen.name,
   COUNT(gen.name) AS Quantity
 FROM genres gen
 RIGHT JOIN tracks trac
 ON trac.genreid=gen.genreid
 GROUP BY gen.name
 ORDER BY COUNT(gen.name) desc;


 #20 Provide a list of our highest selling countries, moderately selling countries, and low selling countries. Label all the countries based by their selling rate.
 SELECT 
   billingcountry,
   COUNT(billingcountry) AS Sale_Numbers,
 CASE
   WHEN COUNT(billingcountry) >= 50 THEN 'Highest Sales'
   WHEN COUNT(billingcountry) >= 20 THEN 'Moderate Sales'
   ELSE 'Lowest Sales'
 END AS 'Country Sale Rates'
 FROM invoices
 GROUP BY billingcountry
 ORDER BY COUNT(billingcountry) desc;


 #21 List the quantity of each media type.
 SELECT 
   med.name AS Media_Type,
   COUNT(trac.trackid) AS Quantity
 FROM media_types med
 RIGHT JOIN tracks trac
 ON med.mediatypeid=trac.mediatypeid
 GROUP BY med.name
 ORDER BY trac.trackid;
